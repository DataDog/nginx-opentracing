load_module modules/ngx_http_opentracing_module.so;

worker_processes  1;
error_log logs/error.log;
events {
    worker_connections 1024;
}
http {
    opentracing on;
    opentracing_tag http_user_agent $http_user_agent;
    opentracing_trace_locations off;
    opentracing_load_tracer /usr/local/lib/libdd_opentracing_plugin.so /etc/dd-config.json;

    server {
        listen 8080;
        location / {
            opentracing_operation_name "$request_method $uri";
            default_type text/html;
            content_by_lua '
                local bridge_tracer = require("opentracing_bridge_tracer")
                local tracer = bridge_tracer.new_from_global()
                local parent_context = tracer:binary_extract(ngx.var.opentracing_binary_context)
                local span = tracer:start_span("lua-hello", {["references"] = {{"child_of", parent_context}}})
                ngx.say("<p>hello, world</p>")
                span:finish()
            ';
        }
    }
}
